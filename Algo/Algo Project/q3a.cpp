#include <iostream>
using namespace std;



unsigned long long int count_email_sequences(int n) {
	if (n <= 0) {
		return 0;
	}
	else if (n == 1) {
		return 1;
	}
	else {
		unsigned long long int* dp = new unsigned long long int[n + 1];
		dp[1] = 1;
		dp[2] = 2;
		for (int i = 3; i <= n; i++) {
			dp[i] = dp[i - 1] + dp[i - 2];
		}
		return dp[n];
	}
}


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//PSEUDOCODE CODE ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//function count_email_sequences(n) :
//    if n <= 0 :
//        return 0
//    else if n == 1 :
//        return 1
//    else :
//        dp[1] = 1
//        dp[2] = 2
//        for i from 3 to n :
//dp[i] = dp[i - 1] + dp[i - 2]
//return dp[n]


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ASYMPTOTIC TIME - COMPLEXITY ANALYSIS /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//The time complexity of each step in the given pseudocode is as follows :
//
//1. Comparing n with 0 takes O(1) time.
//2. Comparing n with 1 takes O(1) time.
//3. Initializing dp[1] and dp[2] takes O(1) time.
//4. The loop from 3 to n takes O(n) time.
//5. Computing dp[i] using the recurrence relation dp[i] = dp[i - 1] + dp[i - 2] takes O(1) time.
//6. Returning dp[n] takes O(1) time.
//
//Therefore, the overall time complexity of the given pseudocode is O(n), which is dominated by the loop from 3 to n.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




int main() {
	int n;
	cout << "Enter the value of n: ";
	cin >> n;
	cout << "Total number of unique sequences of e-mail delivery to Aamir for n = " << n << " is " << count_email_sequences(n) << endl;
	return 0;
}


